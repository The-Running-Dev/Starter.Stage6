<Window x:Class="Starter.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:entities="clr-namespace:Starter.Data.Entities;assembly=Starter.Data"
        xmlns:wpf="clr-namespace:LoadingIndicators.WPF;assembly=LoadingIndicators.WPF"
        xmlns:qc="http://QuickConverter.CodePlex.com/"
        xmlns:extensions="clr-namespace:Starter.WPF.Extensions"
        mc:Ignorable="d"
        Title="Cats" Height="450" Width="800">
    <Window.Resources>
        <ObjectDataProvider MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}"
                            x:Key="AbilityValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="entities:Ability" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ResourceDictionary x:Key="Resources">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingDoubleBounce.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <JournalEntryListConverter x:Key="BooleanConverter" />
        </ResourceDictionary>

        <Style x:Key="DetailsStyle" TargetType="Grid">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsCatSelected}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AbilitiesStyle" TargetType="{x:Type ListBoxItem}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True" >
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Azure"/>
            </Style.Resources>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid x:Name="MainContent" IsEnabled="{qc:Binding '!$P', P={Binding Path=IsLoading}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"></ColumnDefinition>
                <ColumnDefinition Width="200*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="300*" />
                <RowDefinition Height="100" />
            </Grid.RowDefinitions>

            <Label Grid.Row="0" Grid.Column="0">All Cats</Label>
            <Label Grid.Row="0" Grid.Column="1">Details</Label>

            <ListView Grid.Row="1" Grid.Column="0" Name="CatsList" 
                  ItemsSource="{Binding Cats}" SelectedItem="{Binding SelectedCat.Value}"
                  AlternationCount="2" Foreground="#FF5B1D1D">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" />
                    </GridView>
                </ListView.View>
            </ListView>
            <Button Grid.Row="2" Grid.Column="0" Name="NewButton" Content="_New" VerticalAlignment="Top" HorizontalAlignment="Left" Width="75" Command="{Binding CreateCommand }" Margin="10" />

            <Button Grid.Row="2" Grid.Column="0" Name="RefreshButton" Content="_Refresh" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75" Command="{Binding RefreshCommand }" Margin="10" />

            <Grid Grid.Row="1" Grid.Column="1" Margin="10" Style="{StaticResource DetailsStyle}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="150" />
                    <RowDefinition Height="100" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Grid.Column="0">
                    <Label>Id:</Label>
                    <Label>Name:</Label>
                    <Label>Ability:</Label>
                </StackPanel>

                <StackPanel Grid.Row="0" Grid.Column="1">
                    <TextBlock Height="20" Margin="0,10,0,5" Text="{Binding DetailedCat.Id }"></TextBlock>
                    <TextBox Height="20" Margin="0,-5,0,10" Text="{Binding DetailedCat.Name }"
                             extensions:FocusExtension.IsFocused="{Binding IsNameFocused.Value}"
                             CaretIndex="{x:Static sys:Int32.MaxValue}"/>
                    <ListBox Margin="0,0,0,0" Name="AbilityListBox" SelectedItem="{Binding DetailedCat.Ability}"
                     ItemsSource="{Binding Source={StaticResource AbilityValues}}"
                     ItemContainerStyle="{StaticResource AbilitiesStyle}" />
                </StackPanel>

                <WrapPanel Grid.Row="1" Grid.Column="1">
                    <WrapPanel.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Margin" Value="0,0,10,0" />
                            <Setter Property="Padding" Value="0,5" />
                        </Style>
                    </WrapPanel.Resources>

                    <Button Name="SaveButton" Content="_Save" VerticalAlignment="Top" Width="75"
                            Command="{Binding SaveCommand }" />
                    <Button x:Name="DeleteButton" Content="_Delete" VerticalAlignment="Top" Width="75"
                            Command="{Binding DeleteCommand }" />
                    <Button x:Name="CancelButton" Content="_Cancel" VerticalAlignment="Top" Width="75"
                            Command="{Binding CancelCommand }" />
                </WrapPanel>
            </Grid>
        </Grid>
        <Grid x:Name="LoadingIndicatorPanel" IsEnabled="{Binding IsLoading.Value}">
            <wpf:LoadingIndicator SpeedRatio="10" IsActive="True" />
        </Grid>
    </Grid>
</Window>
